imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

sensio_framework_extra:
    view:   { annotations: false }
    router: { annotations: true }
    request: { converters: true }

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources: ['bootstrap_3_layout.html.twig']

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Web Socket Configuration
gos_web_socket:
    server:
        port: "%gos_web_socket_port%"   #The port the socket server will listen on
        host: "%gos_web_socket_host%"   #The host ip to bind to
        router:
            resources:
                - "%kernel.root_dir%/config/pubsub/routing.yml"

jms_di_extra:
    locations:
        all_bundles: false
        bundles: [WellFollowed\AppBundle]
        directories: ["%kernel.root_dir%/../src"]
#jms_serializer:
#    handlers:
#        datetime:
#            default_format: "yyyy-MM-ddTHH:mm:ss.SSSZ"


nelmio_api_doc: ~

# FOS Rest Bundle

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    body_converter:
        enabled: true
    format_listener:
        rules:
            fallback_format: json
            prefer_extension: false
            priorities: [json, html]
    view:
        view_response_listener: 'force'
        formats:
            json : true
        templating_formats:
            html: true
        force_redirects:
            html: true
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
    routing_loader:
        default_format: json                            # All responses should be JSON formated
        include_format: false                           # We do not include format in request, so that all responses
                                                        # will eventually be JSON formated

# FOS User Bundle

fos_user:
    db_driver: orm
    firewall_name: api                                  # Seems to be used when registering user/reseting password,
                                                        # but since there is no "login", as so it seems to be useless in
                                                        # our particular context, but still required by "FOSUserBundle"
    user_class: WellFollowed\AppBundle\Entity\User

# FOS Oauth Bundle

fos_oauth_server:
    db_driver:           orm
    client_class:        WellFollowed\AppBundle\Entity\Client
    access_token_class:  WellFollowed\AppBundle\Entity\AccessToken
    refresh_token_class: WellFollowed\AppBundle\Entity\RefreshToken
    auth_code_class:     WellFollowed\AppBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_manager             # This property will be used when valid credentials are given to load the user upon access token creation

# RabbitMQ

old_sound_rabbit_mq:
    connections:
        default:
            host:     "%old_sound_rabbit_mq_host%"
            port:     "%old_sound_rabbit_mq_port%"
            user:     "%old_sound_rabbit_mq_user%"
            password: "%old_sound_rabbit_mq_password%"
            vhost:    '/'
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 1
#    producers:
#        well_followed_sensor:
#            connection:       default
#            exchange_options: {name: 'well-followed-sensor', type: direct}
    consumers:
        well_followed_sensor:
            connection:       default
            exchange_options: {name: 'well_followed_sensor', type: direct}
            queue_options:    {name: 'well_followed_sensor'}
            callback:         well_followed.sensor_consumer